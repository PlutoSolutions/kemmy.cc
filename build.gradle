buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        dependencies {
            classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
            classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
            classpath 'com.github.jengelman.gradle.plugins:shadow:1.2.3'
        }
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

group = 'cat.yoink'
version = '1.0'
archivesBaseName = 'keemy'

compileJava.options.encoding = 'UTF-8'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
    coreMod = 'cat.yoink.keemy.forge.CoreMod'
}

repositories {
    maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
    maven { url = 'https://jitpack.io' }
}

dependencies {
    compile("org.spongepowered:mixin:0.7.4-SNAPSHOT") {
        exclude module: "launchwrapper"
        exclude module: "guava"
        exclude module: "gson"
        exclude module: "commons-io"
    }
}

shadowJar {
    dependencies {
        include(dependency("org.spongepowered:mixin"))
    }
    exclude "dummyThing"
    exclude "LICENSE.txt"
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixin.keemy.refmap.json"
}

reobf {
    shadowJar {
        mappingType = "SEARGE"
        classpath = sourceSets.main.compileClasspath
    }
}

jar {
    manifest {
        attributes(
                "MixinConfigs": "mixin.keemy.json",
                "TweakClass": "org.spongepowered.asm.launch.MixinTweaker",
                "TweakOrder": 0,
                "FMLCorePluginContainsFMLMod": "true",
                "FMLCorePlugin": "cat.yoink.keemy.forge.CoreMod",
                "ForceLoadAsMod": "true",
        )
    }
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

build.dependsOn(shadowJar)
